class Node:
    def __init__(self, value):
        self.value = value
        self.children = []


class Tree:
    def __init__(self):
        self.nodes = {}
        self.roots = []

    def insert(self, x):
        if x in self.nodes:
            return

        node = Node(x)
        self.nodes[x] = node

        parent = self._find_parent(x)
        if parent is not None:
            self.nodes[parent].children.append(node)
        else:
            self.roots.append(node)

    def _find_parent(self, x):
        for parent, children in tree_data.items():
            if x in children:
                return parent
        return None

    def print_structure(self):
        for root in self.roots:
            self._print_tree(root, 0)

    def _print_tree(self, node, level):
        print(" " * (level * 4) + '-' * level + str(node.value))
        for child in node.children:
            self._print_tree(child, level + 1)

    def search(self, x):
        return x in self.nodes

    def minimum(self, root_val):
        if root_val not in self.nodes:
            return None
        return self._min_recursive(self.nodes[root_val])

    def _min_recursive(self, node):
        res = node.value
        for child in node.children:
            res = min(res, self._min_recursive(child))
        return res

    def maximum(self, root_val):
        if root_val not in self.nodes:
            return None
        return self._max_recursive(self.nodes[root_val])

    def _max_recursive(self, node):
        res = node.value
        for child in node.children:
            res = max(res, self._max_recursive(child))
        return res

tree_data = {
    1.5: [1.3, 1.6],
    3.5: [3.7],
    4.5: [4.0, 4.99],
    7.5: [7.3, 7.8],
    7.8: [7.7, 7.9],
    7.7: [7.6],
    9.5: [9.3],
}

tree = Tree()

for parent, children in tree_data.items():
    tree.insert(parent)
    for child in children:
        tree.insert(child)

tree.print_structure()

print("\nInsert 1.4:")
tree.insert(1.4)
print("Minimum 7.5:", tree.minimum(7.5))
print("Maximum 7.5:", tree.maximum(7.5))
print("Search 1.4:", tree.search(1.4))