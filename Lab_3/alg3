class Node:
    def __init__(self, value):
        self.value = value
        self.children = []

def add_child(parent, child):
    parent.children.append(child)

def print_tree(root, level=0):
    if root:
        print(" " * (level * 4) + '-' * level + str(root.value))
        for child in root.children:
            print_tree(child, level + 1)

roots_values = [1.5, 3.5, 4.5, 7.5, 9.5]

tree_elements = {
    1.5: [1.3, 1.6],
    3.5: [3.7],
    4.5: [4.0, 4.99],
    7.5: [7.3, 7.8],
    7.8: [7.7, 7.9],
    7.7: [7.6],
    9.5: [9.3],
}

nodes = {}
for parent_val, children_vals in tree_elements.items():
    if parent_val not in nodes:
        nodes[parent_val] = Node(parent_val)
    for child_val in children_vals:
        if child_val not in nodes:
            nodes[child_val] = Node(child_val)
        add_child(nodes[parent_val], nodes[child_val])

for root_val in roots_values:
    root_node = nodes.get(root_val, Node(root_val))
    print_tree(root_node)
